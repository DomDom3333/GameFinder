name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore ArcadeMatch.sln
      - name: Publish projects
        run: |
          dotnet publish ArcadeMatch.Client/ArcadeMatch.Client.csproj -c Release -o publish/ArcadeMatch.Client
          dotnet publish ArcadeMatch.Server/ArcadeMatch.Server.csproj -c Release -r win-x64 --self-contained true -o publish/ArcadeMatch.Server/win-x64
          dotnet publish ArcadeMatch.Server/ArcadeMatch.Server.csproj -c Release -r linux-x64 --self-contained true -o publish/ArcadeMatch.Server/linux-x64
          dotnet publish ArcadeMatch.Server/ArcadeMatch.Server.csproj -c Release -r linux-arm64 --self-contained true -o publish/ArcadeMatch.Server/linux-arm64
          dotnet publish ArcadeMatch.Server/ArcadeMatch.Server.csproj -c Release -r linux-arm --self-contained true -o publish/ArcadeMatch.Server/linux-arm
          dotnet publish SteamCookieFetcher/SteamCookieFetcher.csproj -c Release -o publish/SteamCookieFetcher
      - name: Create zip
        run: Compress-Archive -Path publish\* -DestinationPath ArcadeMatch.zip
      - uses: actions/upload-artifact@v4
        with:
          name: ArcadeMatch
          path: ArcadeMatch.zip

  image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set lowercase repository
        run: echo "REPOSITORY=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ArcadeMatch.Server/Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPOSITORY }}/server:v1.${{ github.run_number }}

  release:
    needs: [build, image]
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ArcadeMatch
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.${{ github.run_number }}
          name: Release v1.${{ github.run_number }}
          files: ArcadeMatch.zip
