name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: '5.x'
      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14

  build:
    needs: version
    runs-on: windows-latest
    env:
      VERSION: ${{ needs.version.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore ArcadeMatch.sln
      - name: Publish projects
        run: |
          dotnet publish ArcadeMatch.Avalonia/ArcadeMatch.Avalonia.csproj -c Release -p:Version=$env:VERSION -o publish/ArcadeMatch.Client
          dotnet publish SteamCookieFetcher/SteamCookieFetcher.csproj -c Release -p:Version=$env:VERSION -o publish/ArcadeMatch.Client/SteamCookieFetcher
          dotnet publish ArcadeMatch.Server/ArcadeMatch.Server.csproj -c Release -r win-x64 --self-contained true -p:Version=$env:VERSION -o publish/ArcadeMatch.Server/win-x64
          dotnet publish ArcadeMatch.Server/ArcadeMatch.Server.csproj -c Release -r linux-x64 --self-contained true -p:Version=$env:VERSION -o publish/ArcadeMatch.Server/linux-x64
          dotnet publish ArcadeMatch.Server/ArcadeMatch.Server.csproj -c Release -r linux-arm64 --self-contained true -p:Version=$env:VERSION -o publish/ArcadeMatch.Server/linux-arm64
          dotnet publish ArcadeMatch.Server/ArcadeMatch.Server.csproj -c Release -r linux-arm --self-contained true -p:Version=$env:VERSION -o publish/ArcadeMatch.Server/linux-arm
      - name: Create zip files
        run: |
          Compress-Archive -Path publish\ArcadeMatch.Client\* -DestinationPath ArcadeMatch.Client.zip
          Compress-Archive -Path publish\ArcadeMatch.Server\win-x64\* -DestinationPath ArcadeMatch.Server-win-x64.zip
          Compress-Archive -Path publish\ArcadeMatch.Server\linux-x64\* -DestinationPath ArcadeMatch.Server-linux-x64.zip
          Compress-Archive -Path publish\ArcadeMatch.Server\linux-arm64\* -DestinationPath ArcadeMatch.Server-linux-arm64.zip
          Compress-Archive -Path publish\ArcadeMatch.Server\linux-arm\* -DestinationPath ArcadeMatch.Server-linux-arm.zip
      - uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            ArcadeMatch.Client.zip
            ArcadeMatch.Server-win-x64.zip
            ArcadeMatch.Server-linux-x64.zip
            ArcadeMatch.Server-linux-arm64.zip
            ArcadeMatch.Server-linux-arm.zip

  image:
    needs: version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      VERSION: ${{ needs.version.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set lowercase repository
        run: echo "REPOSITORY=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ArcadeMatch.Server/Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPOSITORY }}:v${{ env.VERSION }}

  release:
    needs: [build, image, version]
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: release-artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.version.outputs.semVer }}
          name: Release v${{ needs.version.outputs.semVer }}
          files: |
            ArcadeMatch.Client.zip
            ArcadeMatch.Server-win-x64.zip
            ArcadeMatch.Server-linux-x64.zip
            ArcadeMatch.Server-linux-arm64.zip
            ArcadeMatch.Server-linux-arm.zip
